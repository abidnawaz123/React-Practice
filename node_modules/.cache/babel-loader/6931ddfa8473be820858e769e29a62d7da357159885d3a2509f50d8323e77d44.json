{"ast":null,"code":"var _jsxFileName = \"/home/enigmatix/Desktop/start/React-Practice/src/Api/fetchApi.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchApi = () => {\n  _s();\n  const [store, setStore] = useState([]);\n  const [newErr, setNewErr] = useState(\"\");\n  const [emptitle, setEmptitle] = useState(\"\");\n  useEffect(() => {\n    newDataFromApi();\n  }, []);\n  const newDataFromApi = async () => {\n    try {\n      const resp = await axios.get(\"http://localhost:3001/todos\");\n      setStore(resp.data);\n    } catch (error) {\n      setNewErr(error.message);\n    }\n  };\n  let deleteRow = async id => {\n    let res = await axios.delete(`http://localhost:3001/todos/${id}`, {\n      method: \"DELETE\"\n    });\n    newDataFromApi();\n  };\n  let GetValue = async () => {\n    let data = {\n      emptitle\n    };\n    console.log(data);\n    // axios.post(url, data // here data must be object)\n    let resp = await axios.post(\"http://localhost:3001/todos\", data);\n    setEmptitle(resp.data.emptitle);\n    newDataFromApi();\n  };\n  let UpdateRow = async (id, title, ind) => {\n    const datas = title;\n    let res = await axios.put(`http://localhost:3001/todos/${id}`, {\n      datas\n    }, {\n      method: \"PUT\"\n    });\n    const newUsers = [...store];\n    let addit = newUsers.findIndex((val, index) => index === ind);\n    console.log(addit);\n    setStore();\n  };\n\n  // let newedititem = empty.find((item2, myindex2) => {\n  //     return myindex2 === ind;\n\n  // const saveData = async () => {\n  //     const title = data1;\n  //     const result = await axios.put(`https://jsonplaceholder.typicode.com/todos/${id}`, { title })\n  //     const index = data.findIndex((item) => item.id === id);\n  //     data[index] = result.data.title;\n  //     setData1('')\n  //     handleClose1()\n  // }\n\n  //Informational responses (100–199)\n  //Successful responses (200–299)\n  //Redirects (300–399)\n  //Client errors (400–499)\n  //Server errors (500–599)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" container \",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"text here\",\n        value: emptitle,\n        onChange: e => setEmptitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: GetValue,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), store.map((elem, ind) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row d-flex justify-content-around mx-5 py-1 bg-secondary \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8 bg-white rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              width: \"50%\",\n              children: [\" \", elem.id + 1, \" . \", elem.emptitle, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)\n          }, elem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"col-1 rounded bg-danger text-white border-0\",\n            width: \"50%\",\n            onClick: () => deleteRow(elem.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"col-1 rounded bg-success text-white border-0\",\n            width: \"50%\",\n            onClick: () => UpdateRow(elem.id, elem.title, ind),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(FetchApi, \"VONctShXXw4SLX91zMeWzTqMbZs=\");\n_c = FetchApi;\nexport default FetchApi;\nvar _c;\n$RefreshReg$(_c, \"FetchApi\");","map":{"version":3,"names":["React","useEffect","useState","axios","FetchApi","store","setStore","newErr","setNewErr","emptitle","setEmptitle","newDataFromApi","resp","get","data","error","message","deleteRow","id","res","delete","method","GetValue","console","log","post","UpdateRow","title","ind","datas","put","newUsers","addit","findIndex","val","index","e","target","value","map","elem"],"sources":["/home/enigmatix/Desktop/start/React-Practice/src/Api/fetchApi.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst FetchApi = () => {\n    const [store, setStore] = useState([]);\n    const [newErr, setNewErr] = useState(\"\");\n    const [emptitle, setEmptitle] = useState(\"\");\n\n    useEffect(() => {\n        newDataFromApi();\n    }, []);\n\n    const newDataFromApi = async () => {\n        try {\n            const resp = await axios.get(\"http://localhost:3001/todos\");\n            setStore(resp.data);\n        } catch (error) {\n            setNewErr(error.message);\n        }\n    };\n\n    let deleteRow = async (id) => {\n        let res = await axios.delete(`http://localhost:3001/todos/${id}`, {\n            method: \"DELETE\",\n        })\n        newDataFromApi();\n    }\n\n    let GetValue = async () => {\n        let data = { emptitle };\n        console.log(data);\n        // axios.post(url, data // here data must be object)\n        let resp = await axios.post(\"http://localhost:3001/todos\", data)\n        setEmptitle(resp.data.emptitle);\n        newDataFromApi();\n\n    };\n    let UpdateRow = async (id, title, ind) => {\n        const datas = title;\n        let res = await axios.put(`http://localhost:3001/todos/${id}`, { datas }, {\n            method: \"PUT\",\n        })\n        const newUsers = [...store];\n        let addit = newUsers.findIndex((val, index) => index === ind);\n        console.log(addit);\n        setStore()\n    }\n\n\n    // let newedititem = empty.find((item2, myindex2) => {\n    //     return myindex2 === ind;\n\n    // const saveData = async () => {\n    //     const title = data1;\n    //     const result = await axios.put(`https://jsonplaceholder.typicode.com/todos/${id}`, { title })\n    //     const index = data.findIndex((item) => item.id === id);\n    //     data[index] = result.data.title;\n    //     setData1('')\n    //     handleClose1()\n    // }\n\n\n    //Informational responses (100–199)\n    //Successful responses (200–299)\n    //Redirects (300–399)\n    //Client errors (400–499)\n    //Server errors (500–599)\n\n    return (\n        <>\n            <div className=\" container \">\n                <input\n                    type=\"text\"\n                    placeholder=\"text here\"\n                    value={emptitle}\n                    onChange={(e) => setEmptitle(e.target.value)}\n                />\n                {/* <input\n                    type=\"text\"\n                    placeholder=\"body here\"\n                    value={thebody}\n                    onChange={(e) => setThisbody(e.target.value)}\n                /> */}\n                <button onClick={GetValue}>Add</button>\n            </div>\n            {store.map((elem, ind) => {\n                return (\n                    <div className=\"container\">\n                        <div className=\"row d-flex justify-content-around mx-5 py-1 bg-secondary \">\n                            <div className=\"col-8 bg-white rounded\" key={elem.id}>\n                                <p width=\"50%\"> {elem.id + 1} . {elem.emptitle} </p>\n                            </div>\n                            <button\n                                className=\"col-1 rounded bg-danger text-white border-0\"\n                                width=\"50%\"\n                                onClick={() => deleteRow(elem.id)}\n                            >\n                                Delete\n                            </button>\n                            <button\n                                className=\"col-1 rounded bg-success text-white border-0\"\n                                width=\"50%\"\n                                onClick={() => UpdateRow(elem.id, elem.title, ind)}\n                            >\n                                Update\n                            </button>\n                        </div>\n                    </div>\n                );\n            })}\n        </>\n    );\n};\nexport default FetchApi;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZU,cAAc,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,YAAY;IAC/B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,6BAA6B,CAAC;MAC3DP,QAAQ,CAACM,IAAI,CAACE,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZP,SAAS,CAACO,KAAK,CAACC,OAAO,CAAC;IAC5B;EACJ,CAAC;EAED,IAAIC,SAAS,GAAG,MAAOC,EAAE,IAAK;IAC1B,IAAIC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,MAAM,CAAE,+BAA8BF,EAAG,EAAC,EAAE;MAC9DG,MAAM,EAAE;IACZ,CAAC,CAAC;IACFV,cAAc,EAAE;EACpB,CAAC;EAED,IAAIW,QAAQ,GAAG,YAAY;IACvB,IAAIR,IAAI,GAAG;MAAEL;IAAS,CAAC;IACvBc,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;IACjB;IACA,IAAIF,IAAI,GAAG,MAAMT,KAAK,CAACsB,IAAI,CAAC,6BAA6B,EAAEX,IAAI,CAAC;IAChEJ,WAAW,CAACE,IAAI,CAACE,IAAI,CAACL,QAAQ,CAAC;IAC/BE,cAAc,EAAE;EAEpB,CAAC;EACD,IAAIe,SAAS,GAAG,OAAOR,EAAE,EAAES,KAAK,EAAEC,GAAG,KAAK;IACtC,MAAMC,KAAK,GAAGF,KAAK;IACnB,IAAIR,GAAG,GAAG,MAAMhB,KAAK,CAAC2B,GAAG,CAAE,+BAA8BZ,EAAG,EAAC,EAAE;MAAEW;IAAM,CAAC,EAAE;MACtER,MAAM,EAAE;IACZ,CAAC,CAAC;IACF,MAAMU,QAAQ,GAAG,CAAC,GAAG1B,KAAK,CAAC;IAC3B,IAAI2B,KAAK,GAAGD,QAAQ,CAACE,SAAS,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKA,KAAK,KAAKP,GAAG,CAAC;IAC7DL,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;IAClB1B,QAAQ,EAAE;EACd,CAAC;;EAGD;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,aAAa;MAAA,wBACxB;QACI,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,WAAW;QACvB,KAAK,EAAEG,QAAS;QAChB,QAAQ,EAAG2B,CAAC,IAAK1B,WAAW,CAAC0B,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/C,eAOF;QAAQ,OAAO,EAAEhB,QAAS;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC,EACLjB,KAAK,CAACkC,GAAG,CAAC,CAACC,IAAI,EAAEZ,GAAG,KAAK;MACtB,oBACI;QAAK,SAAS,EAAC,WAAW;QAAA,uBACtB;UAAK,SAAS,EAAC,2DAA2D;UAAA,wBACtE;YAAK,SAAS,EAAC,wBAAwB;YAAA,uBACnC;cAAG,KAAK,EAAC,KAAK;cAAA,WAAC,GAAC,EAACY,IAAI,CAACtB,EAAE,GAAG,CAAC,EAAC,KAAG,EAACsB,IAAI,CAAC/B,QAAQ,EAAC,GAAC;YAAA;cAAA;cAAA;cAAA;YAAA;UAAI,GADX+B,IAAI,CAACtB,EAAE;YAAA;YAAA;YAAA;UAAA,QAE9C,eACN;YACI,SAAS,EAAC,6CAA6C;YACvD,KAAK,EAAC,KAAK;YACX,OAAO,EAAE,MAAMD,SAAS,CAACuB,IAAI,CAACtB,EAAE,CAAE;YAAA,UACrC;UAED;YAAA;YAAA;YAAA;UAAA,QAAS,eACT;YACI,SAAS,EAAC,8CAA8C;YACxD,KAAK,EAAC,KAAK;YACX,OAAO,EAAE,MAAMQ,SAAS,CAACc,IAAI,CAACtB,EAAE,EAAEsB,IAAI,CAACb,KAAK,EAAEC,GAAG,CAAE;YAAA,UACtD;UAED;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA;MACP;QAAA;QAAA;QAAA;MAAA,QACJ;IAEd,CAAC,CAAC;EAAA,gBACH;AAEX,CAAC;AAAC,GA7GIxB,QAAQ;AAAA,KAARA,QAAQ;AA8Gd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}