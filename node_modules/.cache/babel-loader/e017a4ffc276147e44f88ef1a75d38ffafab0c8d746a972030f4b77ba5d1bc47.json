{"ast":null,"code":"var _jsxFileName = \"/home/enigmatix/Desktop/start/React-Practice/src/Api/fetchApi.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// https://fakestoreapi.com/products\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchApi = () => {\n  _s();\n  // const [myData, setMyData] = useState([]);\n  // const [showError, setShowError] = useState(\"\");\n  const [store, setStore] = useState([]);\n  const [newErr, setNewErr] = useState(\"\");\n\n  // get post put delete are methods to work with\n\n  //axios \n  // useEffect(() => {\n  //     axios.get(\"https://fakestoreapi.com/products\")\n  //         .then((resp) => setMyData(resp.data))\n  //         .catch((error) => setShowError(error.message));\n  // }, []);\n\n  //using async await method here and catching error using try and catch method\n\n  // useEffect(() => {\n  //     getApiData();\n  // }, [])\n  // const getApiData = async () => {\n  //     try {\n  //         const resp = await axios.get(\"https://fakestoreapi.com/products\");\n  //         setMyData(resp.data);\n  //     } catch (error) {\n  //         setShowError(error.message);\n  //     }\n  // }\n  let newDataFromApi = async () => {\n    try {\n      const resp = await axios.get(\"https://fakestoreapi.com/products\");\n      setStore(resp.data);\n    } catch (error) {\n      // setNewErr(error.message);\n    }\n  };\n  useEffect(() => {\n    newDataFromApi();\n  }, []);\n  // console.log(store)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [store.map(elements => {\n      console.log(elements), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: elements.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"AXIOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(FetchApi, \"EwAyEIt7+KqlmodgKKUBNeKRo4k=\");\n_c = FetchApi;\nexport default FetchApi;\nvar _c;\n$RefreshReg$(_c, \"FetchApi\");","map":{"version":3,"names":["React","useEffect","useState","axios","FetchApi","store","setStore","newErr","setNewErr","newDataFromApi","resp","get","data","error","map","elements","console","log","id"],"sources":["/home/enigmatix/Desktop/start/React-Practice/src/Api/fetchApi.js"],"sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios';\n\n// https://fakestoreapi.com/products\nconst FetchApi = () => {\n    // const [myData, setMyData] = useState([]);\n    // const [showError, setShowError] = useState(\"\");\n    const [store, setStore] = useState([]);\n    const [newErr, setNewErr] = useState(\"\");\n\n\n    // get post put delete are methods to work with\n\n    //axios \n    // useEffect(() => {\n    //     axios.get(\"https://fakestoreapi.com/products\")\n    //         .then((resp) => setMyData(resp.data))\n    //         .catch((error) => setShowError(error.message));\n    // }, []);\n\n    //using async await method here and catching error using try and catch method\n\n    // useEffect(() => {\n    //     getApiData();\n    // }, [])\n    // const getApiData = async () => {\n    //     try {\n    //         const resp = await axios.get(\"https://fakestoreapi.com/products\");\n    //         setMyData(resp.data);\n    //     } catch (error) {\n    //         setShowError(error.message);\n    //     }\n    // }\n    let newDataFromApi = async () => {\n        try {\n            const resp = await axios.get(\"https://fakestoreapi.com/products\");\n            setStore(resp.data);\n        } catch (error) {\n            // setNewErr(error.message);\n        }\n    }\n    useEffect(() => {\n        newDataFromApi();\n    }, [])\n    // console.log(store)\n    return (\n        <>\n            {store.map((elements) => {\n            console.log(elements),\n                <h2>{elements.id}</h2>\n            })}\n            <div>AXIOS</div>\n\n        </>\n    )\n}\nexport default FetchApi"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA;AAAA;AACA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAGxC;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIO,cAAc,GAAG,YAAY;IAC7B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,mCAAmC,CAAC;MACjEL,QAAQ,CAACI,IAAI,CAACE,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ;IAAA;EAER,CAAC;EACDZ,SAAS,CAAC,MAAM;IACZQ,cAAc,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;EACN;EACA,oBACI;IAAA,WACKJ,KAAK,CAACS,GAAG,CAAEC,QAAQ,IAAK;MACzBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,eACjB;QAAA,UAAKA,QAAQ,CAACG;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM;IAC1B,CAAC,CAAC,eACF;MAAA,UAAK;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA,gBAEjB;AAEX,CAAC;AAAA,GAnDKd,QAAQ;AAAA,KAARA,QAAQ;AAoDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}