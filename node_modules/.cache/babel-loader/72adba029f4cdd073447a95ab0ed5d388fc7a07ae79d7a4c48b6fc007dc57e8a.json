{"ast":null,"code":"var _jsxFileName = \"/home/enigmatix/Desktop/start/React-Practice/src/Api/fetchApi.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n// http://localhost:3001/todos\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchApi = () => {\n  _s();\n  // const [myData, setMyData] = useState([]);\n  // const [showError, setShowError] = useState(\"\");\n  const [store, setStore] = useState([]);\n  const [newErr, setNewErr] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [thebody, setThisbody] = useState(\"\");\n\n  // console.log(store)\n  // get post put delete are methods to work with\n\n  //axios\n  // useEffect(() => {\n  //     axios.get(\"http://localhost:3001/todos\")\n  //         .then((resp) => setMyData(resp.data))\n  //         .catch((error) => setShowError(error.message));\n  // }, []);\n\n  //using async await method here and catching error using try and catch method\n\n  // useEffect(() => {\n  //     getApiData();\n  // }, [])\n  // const getApiData = async () => {\n  //     try {\n  //         const resp = await axios.get(\"http://localhost:3001/todos\");\n  //         setMyData(resp.data);\n  //     } catch (error) {\n  //         setShowError(error.message);\n  //     }\n  // }\n  //new\n  useEffect(() => {\n    newDataFromApi();\n  }, []);\n  const newDataFromApi = async () => {\n    try {\n      const resp = await axios.get(\"http://localhost:3001/todos\");\n      setStore(resp.data);\n    } catch (error) {\n      setNewErr(error.message);\n    }\n  };\n  let deleteRow = id => {\n    fetch(`http://localhost:3001/todos/${id}`, {\n      method: \"DELETE\"\n    }).then(result => {\n      result.json().then(resp => {\n        console.log(resp);\n      });\n    });\n  };\n  let GetValue = () => {\n    let data = {\n      text,\n      thebody\n    };\n    fetch(\"http://localhost:3001/todos\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(result => {\n      console.log(\"Result >\", result);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" container \",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"text here\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"body here\",\n        value: thebody,\n        onChange: e => setThisbody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: GetValue,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), store.slice(0, 10).map((elem, ind) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row d-flex justify-content-around mx-5 py-1 bg-secondary \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8 bg-white rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              width: \"50%\",\n              children: [\" \", elem.id, \" . \", elem.title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)\n          }, elem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"col-1 rounded bg-danger text-white border-0\",\n            width: \"50%\",\n            onClick: () => deleteRow(elem.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(FetchApi, \"hGH8rZPr32Wg/pVrx0F3VPunJvI=\");\n_c = FetchApi;\nexport default FetchApi;\nvar _c;\n$RefreshReg$(_c, \"FetchApi\");","map":{"version":3,"names":["React","useEffect","useState","axios","FetchApi","store","setStore","newErr","setNewErr","title","setTitle","thebody","setThisbody","newDataFromApi","resp","get","data","error","message","deleteRow","id","fetch","method","then","result","json","console","log","GetValue","text","headers","Accept","body","JSON","stringify","e","setText","target","value","slice","map","elem","ind"],"sources":["/home/enigmatix/Desktop/start/React-Practice/src/Api/fetchApi.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n// http://localhost:3001/todos\nconst FetchApi = () => {\n    // const [myData, setMyData] = useState([]);\n    // const [showError, setShowError] = useState(\"\");\n    const [store, setStore] = useState([]);\n    const [newErr, setNewErr] = useState(\"\");\n\n    const [title, setTitle] = useState(\"\");\n    const [thebody, setThisbody] = useState(\"\");\n\n    // console.log(store)\n    // get post put delete are methods to work with\n\n    //axios\n    // useEffect(() => {\n    //     axios.get(\"http://localhost:3001/todos\")\n    //         .then((resp) => setMyData(resp.data))\n    //         .catch((error) => setShowError(error.message));\n    // }, []);\n\n    //using async await method here and catching error using try and catch method\n\n    // useEffect(() => {\n    //     getApiData();\n    // }, [])\n    // const getApiData = async () => {\n    //     try {\n    //         const resp = await axios.get(\"http://localhost:3001/todos\");\n    //         setMyData(resp.data);\n    //     } catch (error) {\n    //         setShowError(error.message);\n    //     }\n    // }\n    //new\n    useEffect(() => {\n        newDataFromApi();\n    }, []);\n    const newDataFromApi = async () => {\n        try {\n            const resp = await axios.get(\"http://localhost:3001/todos\");\n            setStore(resp.data);\n        } catch (error) {\n            setNewErr(error.message);\n        }\n    };\n    let deleteRow = (id) => {\n        fetch(`http://localhost:3001/todos/${id}`, {\n            method: \"DELETE\",\n        }).then((result) => {\n            result.json().then((resp) => {\n                console.log(resp);\n            });\n        });\n    };\n    let GetValue = () => {\n        let data = { text, thebody };\n        fetch(\"http://localhost:3001/todos\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }).then((result) => {\n            console.log(\"Result >\", result);\n        });\n    };\n    return (\n        <>\n            <div className=\" container \">\n                <input\n                    type=\"text\"\n                    placeholder=\"text here\"\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"body here\"\n                    value={thebody}\n                    onChange={(e) => setThisbody(e.target.value)}\n                />\n                <button onClick={GetValue}>Add</button>\n            </div>\n            {store.slice(0, 10).map((elem, ind) => {\n                return (\n                    <div className=\"container\">\n                        <div className=\"row d-flex justify-content-around mx-5 py-1 bg-secondary \">\n                            <div className=\"col-8 bg-white rounded\" key={elem.id}>\n                                <p width=\"50%\">\n                                    {\" \"}\n                                    {elem.id} . {elem.title}{\" \"}\n                                </p>\n                                {/* <p>{elem.it}</p> */}\n                                {/* <p>{elem.body}</p> */}\n                            </div>\n                            <button\n                                className=\"col-1 rounded bg-danger text-white border-0\"\n                                width=\"50%\"\n                                onClick={() => deleteRow(elem.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                );\n            })}\n        </>\n    );\n};\nexport default FetchApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}