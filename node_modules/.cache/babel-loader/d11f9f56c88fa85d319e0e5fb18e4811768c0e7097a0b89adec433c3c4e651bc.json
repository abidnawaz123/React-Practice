{"ast":null,"code":"var _jsxFileName = \"/home/enigmatix/Desktop/start/React-Practice/src/Api/fetchApi.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// https://jsonplaceholder.typicode.com/posts\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchApi = () => {\n  _s();\n  // const [myData, setMyData] = useState([]);\n  // const [showError, setShowError] = useState(\"\");\n  const [store, setStore] = useState([]);\n  const [newErr, setNewErr] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [thisit, setThisit] = useState(\"\");\n  const [thebody, setThisbody] = useState(\"\");\n\n  // console.log(store)\n  // get post put delete are methods to work with\n\n  //axios \n  // useEffect(() => {\n  //     axios.get(\"https://jsonplaceholder.typicode.com/posts\")\n  //         .then((resp) => setMyData(resp.data))\n  //         .catch((error) => setShowError(error.message));\n  // }, []);\n\n  //using async await method here and catching error using try and catch method\n\n  // useEffect(() => {\n  //     getApiData();\n  // }, [])\n  // const getApiData = async () => {\n  //     try {\n  //         const resp = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  //         setMyData(resp.data);\n  //     } catch (error) {\n  //         setShowError(error.message);\n  //     }\n  // }\n  //new\n  useEffect(() => {\n    newDataFromApi();\n  }, []);\n  const newDataFromApi = async () => {\n    try {\n      const resp = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n      setStore(resp.data);\n    } catch (error) {\n      setNewErr(error.message);\n    }\n  };\n  let deleteRow = id => {\n    fetch(`https://jsonplaceholder.typicode.com/posts${id}`, {\n      method: 'DELETE'\n    }).then(result => {\n      result.json().then(resp => {\n        // console.log(resp)\n      });\n    });\n  };\n  let GetValue = () => {\n    console.log(text);\n    let data = {\n      text\n    };\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => {\n      console.log(\"Result >\", result);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" container \",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: thisit,\n        onChange: e => setThisit(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: thebody,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: GetValue,\n        children: \"Click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), store.slice(0, 10).map((elem, ind) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row d-flex justify-content-around mx-5 py-1 bg-secondary \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8 bg-white rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              width: \"50%\",\n              children: [\" \", elem.id, \" . \", elem.title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: elem.it\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: elem.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)]\n          }, elem.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"col-1 rounded bg-danger text-white border-0\",\n            width: \"50%\",\n            onClick: () => deleteRow(elem.id),\n            children: \"Click\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(FetchApi, \"aN2Z50ceC7bw0cx70VWCFaEIaCA=\");\n_c = FetchApi;\nexport default FetchApi;\nvar _c;\n$RefreshReg$(_c, \"FetchApi\");","map":{"version":3,"names":["React","useEffect","useState","axios","FetchApi","store","setStore","newErr","setNewErr","text","setText","thisit","setThisit","thebody","setThisbody","newDataFromApi","resp","get","data","error","message","deleteRow","id","fetch","method","then","result","json","GetValue","console","log","headers","body","JSON","stringify","e","target","value","slice","map","elem","ind","title","it"],"sources":["/home/enigmatix/Desktop/start/React-Practice/src/Api/fetchApi.js"],"sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios';\n\n// https://jsonplaceholder.typicode.com/posts\nconst FetchApi = () => {\n    // const [myData, setMyData] = useState([]);\n    // const [showError, setShowError] = useState(\"\");\n    const [store, setStore] = useState([]);\n    const [newErr, setNewErr] = useState(\"\");\n\n    const [text, setText] = useState(\"\");\n    const [thisit, setThisit] = useState(\"\");\n    const [thebody, setThisbody] = useState(\"\");\n\n\n    // console.log(store)\n    // get post put delete are methods to work with\n\n    //axios \n    // useEffect(() => {\n    //     axios.get(\"https://jsonplaceholder.typicode.com/posts\")\n    //         .then((resp) => setMyData(resp.data))\n    //         .catch((error) => setShowError(error.message));\n    // }, []);\n\n    //using async await method here and catching error using try and catch method\n\n    // useEffect(() => {\n    //     getApiData();\n    // }, [])\n    // const getApiData = async () => {\n    //     try {\n    //         const resp = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n    //         setMyData(resp.data);\n    //     } catch (error) {\n    //         setShowError(error.message);\n    //     }\n    // }\n    //new\n    useEffect(() => {\n        newDataFromApi();\n    }, []);\n    const newDataFromApi = async () => {\n        try {\n            const resp = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n            setStore(resp.data);\n        }\n        catch (error) {\n            setNewErr(error.message);\n        }\n    }\n    let deleteRow = (id) => {\n        fetch(`https://jsonplaceholder.typicode.com/posts${id}`, {\n            method: 'DELETE'\n        }).then((result) => {\n            result.json().then((resp) => {\n                // console.log(resp)\n            })\n        })\n    }\n    let GetValue = () => {\n        console.log(text);\n        let data = { text };\n        fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then((result) => {\n            console.log(\"Result >\", result)\n        })\n\n    }\n    return (\n        <>\n            <div className=' container '>\n                <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n                <input type=\"text\" value={thisit} onChange={(e) => setThisit(e.target.value)} />\n                <input type=\"text\" value={thebody} onChange={(e) => setText(e.target.value)} />\n                <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n                <button onClick={GetValue}>Click</button>\n            </div>\n            {store.slice(0, 10).map((elem, ind) => {\n                return (\n                    <div className=\"container\">\n                        <div className='row d-flex justify-content-around mx-5 py-1 bg-secondary '>\n                            <div className='col-8 bg-white rounded' key={elem.id} >\n                                <p width=\"50%\"> {elem.id} . {elem.title} </p>\n                                <p>{elem.it}</p>\n                                <p>{elem.body}</p>\n                            </div>\n                            <button className='col-1 rounded bg-danger text-white border-0' width=\"50%\" onClick={() => deleteRow(elem.id)}>Click</button>\n                        </div>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\nexport default FetchApi"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}